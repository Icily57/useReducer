// import { useReducer, useState } from 'react';
// import { useImmerReducer } from 'user-immer';
// import './App.scss';

// interface Joke {
//   id: number;
//   joke: string;
//   rate: number;
// }

// type Action = 
//   | { type: 'ADD_JOKE'; joke: string }
//   | { type: 'UPDATE_RATE'; id: number; rate: number };

// function reducer(draft: Joke[], action: Action) {
//   switch (action.type) {
//     case 'ADD_JOKE':
//       draft.push({ id: draft.length + 1, joke: action.joke, rate: 0 });
//       break;
//     case 'UPDATE_RATE':
//       const joke = draft.find(j => j.id === action.id);
//       if (joke) {
//         joke.rate = action.rate;
//       }
//       break;
//     default:
//       break;
//   }
// }

// function App() {
//   const initialState: Joke[] = [
//     { id: 1, joke: 'What do you call a very small valentine? A valen-tiny!', rate: 3 },
//     { id: 2, joke: 'What did the dog say when he rubbed his tail on the sandpaper? Rough, rough!', rate: 2 },
//     { id: 3, joke: 'A termite walks into the bar and says, "Where is the bar tender?"', rate: 1 },
//     { id: 4, joke: 'Why did the scarecrow win an award? Because he was outstanding in his field!', rate: 0 },
//     { id: 5, joke: 'Why was the math book sad? Because it had too many problems.', rate: 0 }
//   ];

//   const [jokes, dispatch] = useImmerReducer(reducer, initialState);

//   const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
//     e.preventDefault();
//     const joke = (e.target as HTMLFormElement)[0].value;
//     dispatch({ type: 'ADD_JOKE', joke });
//     (e.target as HTMLFormElement).reset();
//   };

//   const updateRate = (id: number, rate: number) => {
//     dispatch({ type: 'UPDATE_RATE', id, rate });
//   };

//   return (
//     <div className='container'>
//       <h2>Jokes for you 💀</h2>
//       <form className="form" onSubmit={handleSubmit}>
//         <input type="text" placeholder='Add a joke' />
//         <button type='submit'>Add Joke</button>
//       </form>
//       <div className="jokes">
//         {jokes.sort((a, b) => b.rate - a.rate).map((joke) => (
//           <div key={joke.id} className='joke'>
//             <div className='joke-text'>{joke.joke}</div>
//             <div className='text'>{joke.rate}</div>
//             <div className="joke-buttons">
//               <button onClick={() => updateRate(joke.id, joke.rate + 1)}>👍</button>
//               <button onClick={() => updateRate(joke.id, joke.rate - 1)}>👎</button>
//             </div>
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// }

// export default App;
